# docker/docker-compose.dev.yml
services:
  db:
    image: mysql:8.0
    container_name: docker-dev-db
    environment:
      MYSQL_DATABASE: ${DB_NAME:-services_db}
      MYSQL_USER: ${DB_USER:-app}
      MYSQL_PASSWORD: ${DB_PASS:-app}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASS:-root}
    ports:
      - "${DB_PORT_HOST:-3307}:3306"       # PC:3307 -> contenedor:3306
    volumes:
      - db_data_dev:/var/lib/mysql         # <- sigue igual aquÃ­
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-u", "root", "-p${DB_ROOT_PASS:-root}"]
      interval: 5s
      timeout: 3s
      retries: 20

  adminer:
    image: adminer
    container_name: docker-dev-adminer
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy

  api:
    image: node:20-alpine
    container_name: docker-dev-api
    working_dir: /app
    volumes:
      - ..:/app
    env_file:
      - .env.dev
    environment:
      DB_HOST: db
      DB_PORT: 3306
      DB_NAME: ${DB_NAME:-services_db}
      DB_USER: ${DB_USER:-app}
      DB_PASS: ${DB_PASS:-app}
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      OPENAI_MODEL: ${OPENAI_MODEL:-gpt-4.1-mini}
    ports:
      - "${API_PORT:-3000}:3000"
    depends_on:
      db:
        condition: service_healthy
    command: sh -lc "npm ci && npm run start:dev"

volumes:
  db_data_dev:
    external: true
    name: docker_db_data
